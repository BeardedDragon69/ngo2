{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nexport function middleware(request: NextRequest) {\n  // Get path\n  const path = request.nextUrl.pathname;\n  \n  // Define protected routes\n  const adminRoutes = ['/admin', '/member_control'];\n  \n  // Check if path is a protected admin route\n  const isAdminRoute = adminRoutes.some(route => path.startsWith(route));\n  \n  // Get token from cookies\n  const token = request.cookies.get('token')?.value;\n  \n  // If trying to access admin routes without a token, redirect to login\n  if (isAdminRoute && !token) {\n    return NextResponse.redirect(new URL('/login', request.url));\n  }\n  \n  return NextResponse.next();\n}\n\n// See: https://nextjs.org/docs/app/building-your-application/routing/middleware#matcher\nexport const config = {\n  matcher: [\n    // Match admin paths\n    '/admin/:path*', \n    '/member_control/:path*',\n    // Don't match api routes\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\n  ],\n}; "],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,WAAW;IACX,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,0BAA0B;IAC1B,MAAM,cAAc;QAAC;QAAU;KAAkB;IAEjD,2CAA2C;IAC3C,MAAM,eAAe,YAAY,IAAI,CAAC,CAAA,QAAS,KAAK,UAAU,CAAC;IAE/D,yBAAyB;IACzB,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;IAE5C,sEAAsE;IACtE,IAAI,gBAAgB,CAAC,OAAO;QAC1B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP,oBAAoB;QACpB;QACA;QACA,yBAAyB;QACzB;KACD;AACH"}}]
}